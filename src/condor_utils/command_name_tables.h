/* !!! DO NOT EDIT THIS FILE !!!
 * generated from: /home/bockelman/zhan0915/htcondor/src/condor_utils/../condor_includes/condor_commands.h
 * by /home/bockelman/zhan0915/htcondor/src/condor_utils/command_table_generator.pl
 */
typedef struct BTranslation {
   int id;
   const char * name;
} BTranslation;
 
const BTranslation DCTranslation[] = {
	{ /*0*/ UPDATE_STARTD_AD, "UPDATE_STARTD_AD" }, 
	{ /*1*/ UPDATE_SCHEDD_AD, "UPDATE_SCHEDD_AD" }, 
	{ /*2*/ UPDATE_MASTER_AD, "UPDATE_MASTER_AD" }, 
//	{ /*3*/ UPDATE_GATEWAY_AD, "UPDATE_GATEWAY_AD" }, /* Not used */
	{ /*4*/ UPDATE_CKPT_SRVR_AD, "UPDATE_CKPT_SRVR_AD" }, 
	{ /*5*/ QUERY_STARTD_ADS, "QUERY_STARTD_ADS" }, 
	{ /*6*/ QUERY_SCHEDD_ADS, "QUERY_SCHEDD_ADS" }, 
	{ /*7*/ QUERY_MASTER_ADS, "QUERY_MASTER_ADS" }, 
//	{ /*8*/ QUERY_GATEWAY_ADS, "QUERY_GATEWAY_ADS" }, /* Not used */
	{ /*9*/ QUERY_CKPT_SRVR_ADS, "QUERY_CKPT_SRVR_ADS" }, 
	{ /*10*/ QUERY_STARTD_PVT_ADS, "QUERY_STARTD_PVT_ADS" }, 
	{ /*11*/ UPDATE_SUBMITTOR_AD, "UPDATE_SUBMITTOR_AD" }, 
	{ /*12*/ QUERY_SUBMITTOR_ADS, "QUERY_SUBMITTOR_ADS" }, 
	{ /*13*/ INVALIDATE_STARTD_ADS, "INVALIDATE_STARTD_ADS" }, 
	{ /*14*/ INVALIDATE_SCHEDD_ADS, "INVALIDATE_SCHEDD_ADS" }, 
	{ /*15*/ INVALIDATE_MASTER_ADS, "INVALIDATE_MASTER_ADS" }, 
//	{ /*16*/ INVALIDATE_GATEWAY_ADS, "INVALIDATE_GATEWAY_ADS" }, /* Not used */
	{ /*17*/ INVALIDATE_CKPT_SRVR_ADS, "INVALIDATE_CKPT_SRVR_ADS" }, 
	{ /*18*/ INVALIDATE_SUBMITTOR_ADS, "INVALIDATE_SUBMITTOR_ADS" }, 
	{ /*19*/ UPDATE_COLLECTOR_AD, "UPDATE_COLLECTOR_AD" }, 
	{ /*20*/ QUERY_COLLECTOR_ADS, "QUERY_COLLECTOR_ADS" }, 
	{ /*21*/ INVALIDATE_COLLECTOR_ADS, "INVALIDATE_COLLECTOR_ADS" }, 
	{ /*22*/ QUERY_HIST_STARTD, "QUERY_HIST_STARTD" }, 
	{ /*23*/ QUERY_HIST_STARTD_LIST, "QUERY_HIST_STARTD_LIST" }, 
	{ /*24*/ QUERY_HIST_SUBMITTOR, "QUERY_HIST_SUBMITTOR" }, 
	{ /*25*/ QUERY_HIST_SUBMITTOR_LIST, "QUERY_HIST_SUBMITTOR_LIST" }, 
	{ /*26*/ QUERY_HIST_GROUPS, "QUERY_HIST_GROUPS" }, 
	{ /*27*/ QUERY_HIST_GROUPS_LIST, "QUERY_HIST_GROUPS_LIST" }, 
	{ /*28*/ QUERY_HIST_SUBMITTORGROUPS, "QUERY_HIST_SUBMITTORGROUPS" }, 
	{ /*29*/ QUERY_HIST_SUBMITTORGROUPS_LIST, "QUERY_HIST_SUBMITTORGROUPS_LIST" }, 
	{ /*30*/ QUERY_HIST_CKPTSRVR, "QUERY_HIST_CKPTSRVR" }, 
	{ /*31*/ QUERY_HIST_CKPTSRVR_LIST, "QUERY_HIST_CKPTSRVR_LIST" }, 
	{ /*42*/ UPDATE_LICENSE_AD, "UPDATE_LICENSE_AD" }, 
	{ /*43*/ QUERY_LICENSE_ADS, "QUERY_LICENSE_ADS" }, 
	{ /*44*/ INVALIDATE_LICENSE_ADS, "INVALIDATE_LICENSE_ADS" }, 
	{ /*45*/ UPDATE_STORAGE_AD, "UPDATE_STORAGE_AD" }, 
	{ /*46*/ QUERY_STORAGE_ADS, "QUERY_STORAGE_ADS" }, 
	{ /*47*/ INVALIDATE_STORAGE_ADS, "INVALIDATE_STORAGE_ADS" }, 
	{ /*48*/ QUERY_ANY_ADS, "QUERY_ANY_ADS" }, 
	{ /*49*/ UPDATE_NEGOTIATOR_AD, "UPDATE_NEGOTIATOR_AD" }, 
	{ /*50*/ QUERY_NEGOTIATOR_ADS, "QUERY_NEGOTIATOR_ADS" }, 
	{ /*51*/ INVALIDATE_NEGOTIATOR_ADS, "INVALIDATE_NEGOTIATOR_ADS" }, 
	{ /*52*/ UPDATE_QUILL_AD, "UPDATE_QUILL_AD" }, 
	{ /*53*/ QUERY_QUILL_ADS, "QUERY_QUILL_ADS" }, 
	{ /*54*/ INVALIDATE_QUILL_ADS, "INVALIDATE_QUILL_ADS" }, 
	{ /*55*/ UPDATE_HAD_AD, "UPDATE_HAD_AD" }, 
	{ /*56*/ QUERY_HAD_ADS, "QUERY_HAD_ADS" }, 
	{ /*57*/ INVALIDATE_HAD_ADS, "INVALIDATE_HAD_ADS" }, 
	{ /*58*/ UPDATE_AD_GENERIC, "UPDATE_AD_GENERIC" }, 
	{ /*59*/ INVALIDATE_ADS_GENERIC, "INVALIDATE_ADS_GENERIC" }, 
	{ /*60*/ UPDATE_STARTD_AD_WITH_ACK, "UPDATE_STARTD_AD_WITH_ACK" }, 
	{ /*61*/ UPDATE_XFER_SERVICE_AD, "UPDATE_XFER_SERVICE_AD" }, 
	{ /*62*/ QUERY_XFER_SERVICE_ADS, "QUERY_XFER_SERVICE_ADS" }, 
	{ /*63*/ INVALIDATE_XFER_SERVICE_ADS, "INVALIDATE_XFER_SERVICE_ADS" }, 
	{ /*64*/ UPDATE_LEASE_MANAGER_AD, "UPDATE_LEASE_MANAGER_AD" }, 
	{ /*65*/ QUERY_LEASE_MANAGER_ADS, "QUERY_LEASE_MANAGER_ADS" }, 
	{ /*66*/ INVALIDATE_LEASE_MANAGER_ADS, "INVALIDATE_LEASE_MANAGER_ADS" }, 
	{ /*67*/ CCB_REGISTER, "CCB_REGISTER" }, 
	{ /*68*/ CCB_REQUEST, "CCB_REQUEST" }, 
	{ /*69*/ CCB_REVERSE_CONNECT, "CCB_REVERSE_CONNECT" }, 
	{ /*70*/ UPDATE_GRID_AD, "UPDATE_GRID_AD" }, 
	{ /*71*/ QUERY_GRID_ADS, "QUERY_GRID_ADS" }, 
	{ /*72*/ INVALIDATE_GRID_ADS, "INVALIDATE_GRID_ADS" }, 
	{ /*73*/ MERGE_STARTD_AD, "MERGE_STARTD_AD" }, 
	{ /*74*/ QUERY_GENERIC_ADS, "QUERY_GENERIC_ADS" }, 
	{ /*75*/ SHARED_PORT_CONNECT, "SHARED_PORT_CONNECT" }, 
	{ /*76*/ SHARED_PORT_PASS_SOCK, "SHARED_PORT_PASS_SOCK" }, 
	{ /*401*/ CONTINUE_CLAIM, "CONTINUE_CLAIM" }, // New name for CONTINUE_FRGN_JOB
	{ /*402*/ SUSPEND_CLAIM, "SUSPEND_CLAIM" }, // New name for SUSPEND_FRGN_JOB
	{ /*403*/ DEACTIVATE_CLAIM, "DEACTIVATE_CLAIM" }, // New name for CKPT_FRGN_JOB
	{ /*404*/ DEACTIVATE_CLAIM_FORCIBLY, "DEACTIVATE_CLAIM_FORCIBLY" }, // New name for KILL_FRGN_JOB
	{ /*405*/ LOCAL_STATUS, "LOCAL_STATUS" }, /* Not used */
//	{ /*406*/ LOCAL_STATISTICS, "LOCAL_STATISTICS" }, /* Not used */
	{ /*407*/ PERMISSION, "PERMISSION" }, // used in negotiation protocol
//	{ /*408*/ SET_DEBUG_FLAGS, "SET_DEBUG_FLAGS" }, /* Not used */
//	{ /*409*/ PREEMPT_LOCAL_JOBS, "PREEMPT_LOCAL_JOBS" }, /* Not used */
//	{ /*410*/ RM_LOCAL_JOB, "RM_LOCAL_JOB" }, /* Not used */
//	{ /*411*/ START_FRGN_JOB, "START_FRGN_JOB" }, /* Not used */
//	{ /*412*/ AVAILABILITY, "AVAILABILITY" }, /* Not used */
//	{ /*413*/ NUM_FRGN_JOBS, "NUM_FRGN_JOBS" }, /* Not used */
//	{ /*414*/ STARTD_INFO, "STARTD_INFO" }, /* Not used */
//	{ /*415*/ SCHEDD_INFO, "SCHEDD_INFO" }, /* Not used */
	{ /*416*/ NEGOTIATE, "NEGOTIATE" }, // 7.5.4+ negotiation command
	{ /*417*/ SEND_JOB_INFO, "SEND_JOB_INFO" }, // used in negotiation protocol
	{ /*418*/ NO_MORE_JOBS, "NO_MORE_JOBS" }, // used in negotiation protocol
	{ /*419*/ JOB_INFO, "JOB_INFO" }, // used in negotiation protocol
//	{ /*420*/ GIVE_STATUS, "GIVE_STATUS" }, /* Not used */
	{ /*421*/ RESCHEDULE, "RESCHEDULE" }, 
//	{ /*422*/ PING, "PING" }, /* Not used */
//	{ /*423*/ NEGOTIATOR_INFO, "NEGOTIATOR_INFO" }, /* Not used */
//	{ /*424*/ GIVE_STATUS_LINES, "GIVE_STATUS_LINES" }, /* Not used */
	{ /*425*/ END_NEGOTIATE, "END_NEGOTIATE" }, // used in negotiation protocol
	{ /*426*/ REJECTED, "REJECTED" }, 
	{ /*427*/ X_EVENT_NOTIFICATION, "X_EVENT_NOTIFICATION" }, 
//	{ /*428*/ RECONFIG, "RECONFIG" }, /* Not used */
//	{ /*429*/ GET_HISTORY, "GET_HISTORY" }, /* Not used */
//	{ /*430*/ UNLINK_HISTORY_FILE, "UNLINK_HISTORY_FILE" }, /* Not used */
//	{ /*431*/ UNLINK_HISTORY_FILE_DONE, "UNLINK_HISTORY_FILE_DONE" }, /* Not used */
//	{ /*432*/ DO_NOT_UNLINK_HISTORY_FILE, "DO_NOT_UNLINK_HISTORY_FILE" }, /* Not used */
//	{ /*433*/ SEND_ALL_JOBS, "SEND_ALL_JOBS" }, /* Not used */
//	{ /*434*/ SEND_ALL_JOBS_PRIO, "SEND_ALL_JOBS_PRIO" }, /* Not used */
	{ /*435*/ REQ_NEW_PROC, "REQ_NEW_PROC" }, 
	{ /*436*/ PCKPT_FRGN_JOB, "PCKPT_FRGN_JOB" }, 
//	{ /*437*/ SEND_RUNNING_JOBS, "SEND_RUNNING_JOBS" }, /* Not used */
//	{ /*438*/ CHECK_CAPABILITY, "CHECK_CAPABILITY" }, /* Not used */
//	{ /*439*/ GIVE_PRIORITY, "GIVE_PRIORITY" }, /* Not used */
	{ /*440*/ MATCH_INFO, "MATCH_INFO" }, 
	{ /*441*/ ALIVE, "ALIVE" }, 
	{ /*442*/ REQUEST_CLAIM, "REQUEST_CLAIM" }, 
	{ /*443*/ RELEASE_CLAIM, "RELEASE_CLAIM" }, 
	{ /*444*/ ACTIVATE_CLAIM, "ACTIVATE_CLAIM" }, 
//	{ /*445*/ PRIORITY_INFO, "PRIORITY_INFO" }, /* negotiator to accountant, Not used */
	{ /*446*/ PCKPT_ALL_JOBS, "PCKPT_ALL_JOBS" }, 
	{ /*447*/ VACATE_ALL_CLAIMS, "VACATE_ALL_CLAIMS" }, 
	{ /*448*/ GIVE_STATE, "GIVE_STATE" }, 
	{ /*449*/ SET_PRIORITY, "SET_PRIORITY" }, // negotiator(priviliged) cmd 
//	{ /*450*/ GIVE_CLASSAD, "GIVE_CLASSAD" }, /* Not used */
	{ /*451*/ GET_PRIORITY, "GET_PRIORITY" }, // negotiator
//	{ /*452*/ GIVE_REQUEST_AD, "GIVE_REQUEST_AD" }, // Starter -> Startd, Not used
	{ /*453*/ RESTART, "RESTART" }, 
	{ /*454*/ DAEMONS_OFF, "DAEMONS_OFF" }, 
	{ /*455*/ DAEMONS_ON, "DAEMONS_ON" }, 
	{ /*456*/ MASTER_OFF, "MASTER_OFF" }, 
	{ /*457*/ CONFIG_VAL, "CONFIG_VAL" }, 
	{ /*458*/ RESET_USAGE, "RESET_USAGE" }, // negotiator
	{ /*459*/ SET_PRIORITYFACTOR, "SET_PRIORITYFACTOR" }, // negotiator
	{ /*460*/ RESET_ALL_USAGE, "RESET_ALL_USAGE" }, // negotiator
	{ /*461*/ DAEMONS_OFF_FAST, "DAEMONS_OFF_FAST" }, 
	{ /*462*/ MASTER_OFF_FAST, "MASTER_OFF_FAST" }, 
	{ /*463*/ GET_RESLIST, "GET_RESLIST" }, // negotiator
	{ /*464*/ ATTEMPT_ACCESS, "ATTEMPT_ACCESS" }, // schedd, test a file
	{ /*465*/ VACATE_CLAIM, "VACATE_CLAIM" }, // vacate a given claim
	{ /*466*/ PCKPT_JOB, "PCKPT_JOB" }, // periodic ckpt a given slot
	{ /*467*/ DAEMON_OFF, "DAEMON_OFF" }, // specific daemon, subsys follows 
	{ /*468*/ DAEMON_OFF_FAST, "DAEMON_OFF_FAST" }, // specific daemon, subsys follows 
	{ /*469*/ DAEMON_ON, "DAEMON_ON" }, // specific daemon, subsys follows 
	{ /*470*/ GIVE_TOTALS_CLASSAD, "GIVE_TOTALS_CLASSAD" }, 
	{ /*471*/ DUMP_STATE, "DUMP_STATE" }, // drop internal vars into classad
	{ /*472*/ PERMISSION_AND_AD, "PERMISSION_AND_AD" }, // negotiator is sending startad to schedd
//	{ /*473*/ REQUEST_NETWORK, "REQUEST_NETWORK" }, // negotiator network mgmt, Not used
	{ /*474*/ VACATE_ALL_FAST, "VACATE_ALL_FAST" }, // fast vacate for whole machine
	{ /*475*/ VACATE_CLAIM_FAST, "VACATE_CLAIM_FAST" }, // fast vacate for a given slot
	{ /*476*/ REJECTED_WITH_REASON, "REJECTED_WITH_REASON" }, // diagnostic version of REJECTED
	{ /*477*/ START_AGENT, "START_AGENT" }, // have the master start an agent
	{ /*478*/ ACT_ON_JOBS, "ACT_ON_JOBS" }, // have the schedd act on some jobs (rm, hold, release)
	{ /*479*/ STORE_CRED, "STORE_CRED" }, // schedd, store a credential
	{ /*480*/ SPOOL_JOB_FILES, "SPOOL_JOB_FILES" }, // spool all job files via filetransfer object
	{ /*481*/ GET_MYPROXY_PASSWORD, "GET_MYPROXY_PASSWORD" }, // gmanager->schedd: Give me MyProxy password
	{ /*482*/ DELETE_USER, "DELETE_USER" }, // negotiator  (actually, accountant)
	{ /*483*/ DAEMON_OFF_PEACEFUL, "DAEMON_OFF_PEACEFUL" }, // specific daemon, subsys follows
	{ /*484*/ DAEMONS_OFF_PEACEFUL, "DAEMONS_OFF_PEACEFUL" }, 
	{ /*485*/ RESTART_PEACEFUL, "RESTART_PEACEFUL" }, 
	{ /*486*/ TRANSFER_DATA, "TRANSFER_DATA" }, // send all job files back via filetransfer object
	{ /*487*/ UPDATE_GSI_CRED, "UPDATE_GSI_CRED" }, // send refreshed gsi proxy file
	{ /*488*/ SPOOL_JOB_FILES_WITH_PERMS, "SPOOL_JOB_FILES_WITH_PERMS" }, // spool all job files via filetransfer object (new version with file permissions)
	{ /*489*/ TRANSFER_DATA_WITH_PERMS, "TRANSFER_DATA_WITH_PERMS" }, // send all job files back via filetransfer object (new version with file permissions)
	{ /*490*/ CHILD_ON, "CHILD_ON" }, // Turn my child ON (HAD)
	{ /*491*/ CHILD_OFF, "CHILD_OFF" }, // Turn my child OFF (HAD)
	{ /*492*/ CHILD_OFF_FAST, "CHILD_OFF_FAST" }, // Turn my child OFF/Fast (HAD)
	{ /*493*/ NEGOTIATE_WITH_SIGATTRS, "NEGOTIATE_WITH_SIGATTRS" }, // pre 7.5.4 NEGOTIATE
	{ /*494*/ SET_ACCUMUSAGE, "SET_ACCUMUSAGE" }, // negotiator
	{ /*495*/ SET_BEGINTIME, "SET_BEGINTIME" }, // negotiator
	{ /*496*/ SET_LASTTIME, "SET_LASTTIME" }, // negotiator
	{ /*497*/ STORE_POOL_CRED, "STORE_POOL_CRED" }, // master, store password for daemon-to-daemon shared secret auth (PASSWORD)
	{ /*498*/ VM_REGISTER, "VM_REGISTER" }, // Virtual Machine (*not* "slot") ;)
	{ /*499*/ DELEGATE_GSI_CRED_SCHEDD, "DELEGATE_GSI_CRED_SCHEDD" }, // delegate refreshed gsi proxy to schedd
	{ /*500*/ DELEGATE_GSI_CRED_STARTER, "DELEGATE_GSI_CRED_STARTER" }, // delegate refreshed gsi proxy to starter
	{ /*501*/ DELEGATE_GSI_CRED_STARTD, "DELEGATE_GSI_CRED_STARTD" }, // delegate gsi proxy to startd
	{ /*502*/ REQUEST_SANDBOX_LOCATION, "REQUEST_SANDBOX_LOCATION" }, // get the sinful of a transferd
	{ /*503*/ VM_UNIV_GAHP_ERROR, "VM_UNIV_GAHP_ERROR" }, // report the error of vmgahp to startd
	{ /*504*/ VM_UNIV_VMPID, "VM_UNIV_VMPID" }, // PID of process for a VM
	{ /*505*/ VM_UNIV_GUEST_IP, "VM_UNIV_GUEST_IP" }, // IP address of VM
	{ /*506*/ VM_UNIV_GUEST_MAC, "VM_UNIV_GUEST_MAC" }, // MAC address of VM
	{ /*507*/ TRANSFER_QUEUE_REQUEST, "TRANSFER_QUEUE_REQUEST" }, // request to do file transfer
	{ /*508*/ SET_SHUTDOWN_PROGRAM, "SET_SHUTDOWN_PROGRAM" }, // Master: Run program at shutdown
	{ /*509*/ GET_JOB_CONNECT_INFO, "GET_JOB_CONNECT_INFO" }, // schedd: get connection information for starter running a job
	{ /*510*/ RECYCLE_SHADOW, "RECYCLE_SHADOW" }, // schedd: get a new job for a shadow
	{ /*511*/ CLEAR_DIRTY_JOB_ATTRS, "CLEAR_DIRTY_JOB_ATTRS" }, // schedd: clear dirty attributes for a job
	{ /*512*/ DRAIN_JOBS, "DRAIN_JOBS" }, 
	{ /*513*/ CANCEL_DRAIN_JOBS, "CANCEL_DRAIN_JOBS" }, 
	{ /*514*/ GET_PRIORITY_ROLLUP, "GET_PRIORITY_ROLLUP" }, // negotiator
	{ /*515*/ QUERY_SCHEDD_HISTORY, "QUERY_SCHEDD_HISTORY" }, 
	{ /*516*/ QUERY_JOB_ADS, "QUERY_JOB_ADS" }, 
	{ /*517*/ SWAP_CLAIM_AND_ACTIVATION, "SWAP_CLAIM_AND_ACTIVATION" }, // swap claim & activation between two STARTD resources, for moving a job into a 'transfer' slot.
	{ /*518*/ SEND_RESOURCE_REQUEST_LIST, "SEND_RESOURCE_REQUEST_LIST" }, // used in negotiation protocol
	{ /*1000*/ CA_AUTH_CMD, "CA_AUTH_CMD" }, 
	{ /*1001*/ CA_REQUEST_CLAIM, "CA_REQUEST_CLAIM" }, 
	{ /*1002*/ CA_RELEASE_CLAIM, "CA_RELEASE_CLAIM" }, 
	{ /*1003*/ CA_ACTIVATE_CLAIM, "CA_ACTIVATE_CLAIM" }, 
	{ /*1004*/ CA_DEACTIVATE_CLAIM, "CA_DEACTIVATE_CLAIM" }, 
	{ /*1005*/ CA_SUSPEND_CLAIM, "CA_SUSPEND_CLAIM" }, 
	{ /*1006*/ CA_RESUME_CLAIM, "CA_RESUME_CLAIM" }, 
	{ /*1007*/ CA_RENEW_LEASE_FOR_CLAIM, "CA_RENEW_LEASE_FOR_CLAIM" }, 
	{ /*1111*/ QMGMT_READ_CMD, "QMGMT_READ_CMD" }, 
	{ /*1112*/ QMGMT_WRITE_CMD, "QMGMT_WRITE_CMD" }, 
	{ /*1200*/ CA_CMD, "CA_CMD" }, 
	{ /*1201*/ CA_LOCATE_STARTER, "CA_LOCATE_STARTER" }, 
	{ /*1202*/ CA_RECONNECT_JOB, "CA_RECONNECT_JOB" }, 
	{ /*1500*/ STARTER_HOLD_JOB, "STARTER_HOLD_JOB" }, 
	{ /*1501*/ CREATE_JOB_OWNER_SEC_SESSION, "CREATE_JOB_OWNER_SEC_SESSION" }, 
	{ /*1502*/ START_SSHD, "START_SSHD" }, 
	{ /*1503*/ STARTER_PEEK, "STARTER_PEEK" }, 
	{ /*60000*/ DC_RAISESIGNAL, "DC_RAISESIGNAL" }, 
	{ /*60002*/ DC_CONFIG_PERSIST, "DC_CONFIG_PERSIST" }, 
	{ /*60003*/ DC_CONFIG_RUNTIME, "DC_CONFIG_RUNTIME" }, 
	{ /*60004*/ DC_RECONFIG, "DC_RECONFIG" }, 
	{ /*60005*/ DC_OFF_GRACEFUL, "DC_OFF_GRACEFUL" }, 
	{ /*60006*/ DC_OFF_FAST, "DC_OFF_FAST" }, 
	{ /*60007*/ DC_CONFIG_VAL, "DC_CONFIG_VAL" }, 
	{ /*60008*/ DC_CHILDALIVE, "DC_CHILDALIVE" }, 
	{ /*60009*/ DC_SERVICEWAITPIDS, "DC_SERVICEWAITPIDS" }, 
	{ /*60010*/ DC_AUTHENTICATE, "DC_AUTHENTICATE" }, 
	{ /*60011*/ DC_NOP, "DC_NOP" }, 
	{ /*60012*/ DC_RECONFIG_FULL, "DC_RECONFIG_FULL" }, 
	{ /*60013*/ DC_FETCH_LOG, "DC_FETCH_LOG" }, 
	{ /*60014*/ DC_INVALIDATE_KEY, "DC_INVALIDATE_KEY" }, 
	{ /*60015*/ DC_OFF_PEACEFUL, "DC_OFF_PEACEFUL" }, 
	{ /*60016*/ DC_SET_PEACEFUL_SHUTDOWN, "DC_SET_PEACEFUL_SHUTDOWN" }, 
	{ /*60017*/ DC_TIME_OFFSET, "DC_TIME_OFFSET" }, 
	{ /*60018*/ DC_PURGE_LOG, "DC_PURGE_LOG" }, 
//	{ /*60019*/ DC_SHARE_SOCK, "DC_SHARE_SOCK" }, /* Not used */
	{ /*60020*/ DC_NOP_READ, "DC_NOP_READ" }, 
	{ /*60021*/ DC_NOP_WRITE, "DC_NOP_WRITE" }, 
	{ /*60022*/ DC_NOP_NEGOTIATOR, "DC_NOP_NEGOTIATOR" }, 
	{ /*60023*/ DC_NOP_ADMINISTRATOR, "DC_NOP_ADMINISTRATOR" }, 
	{ /*60024*/ DC_NOP_OWNER, "DC_NOP_OWNER" }, 
	{ /*60025*/ DC_NOP_CONFIG, "DC_NOP_CONFIG" }, 
	{ /*60026*/ DC_NOP_DAEMON, "DC_NOP_DAEMON" }, 
	{ /*60027*/ DC_NOP_ADVERTISE_STARTD, "DC_NOP_ADVERTISE_STARTD" }, 
	{ /*60028*/ DC_NOP_ADVERTISE_SCHEDD, "DC_NOP_ADVERTISE_SCHEDD" }, 
	{ /*60029*/ DC_NOP_ADVERTISE_MASTER, "DC_NOP_ADVERTISE_MASTER" }, 
	{ /*60040*/ DC_SEC_QUERY, "DC_SEC_QUERY" }, 
	{ /*60041*/ DC_SET_FORCE_SHUTDOWN, "DC_SET_FORCE_SHUTDOWN" }, 
	{ /*60042*/ DC_OFF_FORCE, "DC_OFF_FORCE" }, 
	{ /*61000*/ FILETRANS_UPLOAD, "FILETRANS_UPLOAD" }, 
	{ /*61001*/ FILETRANS_DOWNLOAD, "FILETRANS_DOWNLOAD" }, 
//	{ /*70001*/ PW_SETPASS, "PW_SETPASS" }, /* Not used */
//	{ /*70002*/ PW_GETPASS, "PW_GETPASS" }, /* Not used */
//	{ /*70003*/ PW_CLEARPASS, "PW_CLEARPASS" }, /* Not used */
	{ /*71000*/ SHADOW_UPDATEINFO, "SHADOW_UPDATEINFO" }, 
//	{ /*71001*/ TAKE_MATCH, "TAKE_MATCH" }, // for MPI & parallel shadow, Not used
	{ /*71002*/ MPI_START_COMRADE, "MPI_START_COMRADE" }, // for MPI & parallel shadow
	{ /*71003*/ GIVE_MATCHES, "GIVE_MATCHES" }, // for MPI & parallel shadow
//	{ /*71004*/ RECEIVE_JOBAD, "RECEIVE_JOBAD" }, /* Not used */
	{ /*71005*/ UPDATE_JOBAD, "UPDATE_JOBAD" }, 
	{ /*73000*/ GRIDMAN_CHECK_LEASES, "GRIDMAN_CHECK_LEASES" }, 
	{ /*74000*/ TRANSFERD_REGISTER, "TRANSFERD_REGISTER" }, 
	{ /*74001*/ TRANSFERD_CONTROL_CHANNEL, "TRANSFERD_CONTROL_CHANNEL" }, 
	{ /*74002*/ TRANSFERD_WRITE_FILES, "TRANSFERD_WRITE_FILES" }, 
	{ /*74003*/ TRANSFERD_READ_FILES, "TRANSFERD_READ_FILES" }, 
	{ /*75000*/ LEASE_MANAGER_GET_LEASES, "LEASE_MANAGER_GET_LEASES" }, 
	{ /*75001*/ LEASE_MANAGER_RENEW_LEASE, "LEASE_MANAGER_RENEW_LEASE" }, 
	{ /*75002*/ LEASE_MANAGER_RELEASE_LEASE, "LEASE_MANAGER_RELEASE_LEASE" }, 
	{ /*76000*/ CACHED_CREATE_CACHE_DIR, "CACHED_CREATE_CACHE_DIR" }, 
	{ /*76001*/ CACHED_UPLOAD_FILES, "CACHED_UPLOAD_FILES" }, 
	{ /*76002*/ CACHED_DOWNLOAD_FILES, "CACHED_DOWNLOAD_FILES" }, 
	{ /*76003*/ CACHED_REMOVE_CACHE_DIR, "CACHED_REMOVE_CACHE_DIR" }, 
	{ /*76004*/ CACHED_UPDATE_LEASE, "CACHED_UPDATE_LEASE" }, 
	{ /*76005*/ CACHED_LIST_CACHE_DIRS, "CACHED_LIST_CACHE_DIRS" }, 
	{ /*76006*/ CACHED_LIST_FILES_BY_PATH, "CACHED_LIST_FILES_BY_PATH" }, 
	{ /*76007*/ CACHED_CHECK_CONSISTENCY, "CACHED_CHECK_CONSISTENCY" }, 
	{ /*76008*/ CACHED_SET_REPLICATION_POLICY, "CACHED_SET_REPLICATION_POLICY" }, 
	{ /*76009*/ CACHED_GET_REPLICATION_POLICY, "CACHED_GET_REPLICATION_POLICY" }, 
	{ /*76010*/ CACHED_CREATE_REPLICA, "CACHED_CREATE_REPLICA" }, 
	{ /*76011*/ CACHED_REPLICA_DOWNLOAD_FILES, "CACHED_REPLICA_DOWNLOAD_FILES" }, 
	{ /*76012*/ CACHED_ADVERTISE_TO_ORIGIN, "CACHED_ADVERTISE_TO_ORIGIN" }, 
	{ /*76013*/ CACHED_REQUEST_LOCAL_REPLICATION, "CACHED_REQUEST_LOCAL_REPLICATION" }, 
	{ /*76014*/ CACHED_ENCODE_DIR, "CACHED_ENCODE_DIR" }, 
	{ /*76015*/ CACHED_ENCODE_FILE, "CACHED_ENCODE_FILE" }, 
	{ /*76016*/ CACHED_DECODE_FILE, "CACHED_DECODE_FILE" }, 
	{ /*76017*/ CACHED_DISTRIBUTE_ENCODED_FILES, "CACHED_DISTRIBUTE_ENCODED_FILES" }, 
	{ /*81000*/ CREDD_STORE_CRED, "CREDD_STORE_CRED" }, 
	{ /*81001*/ CREDD_GET_CRED, "CREDD_GET_CRED" }, 
	{ /*81002*/ CREDD_REMOVE_CRED, "CREDD_REMOVE_CRED" }, 
	{ /*81003*/ CREDD_QUERY_CRED, "CREDD_QUERY_CRED" }, 
	{ /*81099*/ CREDD_GET_PASSWD, "CREDD_GET_PASSWD" }, // used by the Win32 credd only
	{ /*81100*/ CREDD_NOP, "CREDD_NOP" }, // used by the Win32 credd only
};
const int DCTranslation_count = 241;
// constants that refer to index ranges in the DCTranslation table above.
const int DCTranslation_COLLECTOR_start = 0;
const int DCTranslation_COLLECTOR_count = 64;
const int DCTranslation_SCHED_VERS_start = 64;
const int DCTranslation_SCHED_VERS_count = 91;
const int DCTranslation_CA_AUTH_CMD_start = 155;
const int DCTranslation_CA_AUTH_CMD_count = 8;
const int DCTranslation_QMGMT_start = 163;
const int DCTranslation_QMGMT_count = 2;
const int DCTranslation_CA_CMD_start = 165;
const int DCTranslation_CA_CMD_count = 3;
const int DCTranslation_STARTER_COMMANDS_start = 168;
const int DCTranslation_STARTER_COMMANDS_count = 4;
const int DCTranslation_DC_start = 172;
const int DCTranslation_DC_count = 31;
const int DCTranslation_FILETRANSFER_start = 203;
const int DCTranslation_FILETRANSFER_count = 2;
const int DCTranslation_DCSHADOW_start = 205;
const int DCTranslation_DCSHADOW_count = 4;
const int DCTranslation_DCGRIDMANAGER_start = 209;
const int DCTranslation_DCGRIDMANAGER_count = 1;
const int DCTranslation_TRANSFERD_start = 210;
const int DCTranslation_TRANSFERD_count = 4;
const int DCTranslation_LEASE_MANAGER_start = 214;
const int DCTranslation_LEASE_MANAGER_count = 3;
const int DCTranslation_CACHED_start = 217;
const int DCTranslation_CACHED_count = 18;
const int DCTranslation_CREDD_start = 235;
const int DCTranslation_CREDD_count = 6;

// the array below indexes DCTranslation[] (see above) by name.
// it has the same number of elements.
const int DCTranslationIndexByName[] = {
	114, /*ACT_ON_JOBS*/ // have the schedd act on some jobs (rm, hold, release)
	84, /*ACTIVATE_CLAIM*/ 
	81, /*ALIVE*/ 
	101, /*ATTEMPT_ACCESS*/ // schedd, test a file
//	70, /*AVAILABILITY*/ /* Not used */
	158, /*CA_ACTIVATE_CLAIM*/ 
	155, /*CA_AUTH_CMD*/ 
	165, /*CA_CMD*/ 
	159, /*CA_DEACTIVATE_CLAIM*/ 
	166, /*CA_LOCATE_STARTER*/ 
	167, /*CA_RECONNECT_JOB*/ 
	157, /*CA_RELEASE_CLAIM*/ 
	162, /*CA_RENEW_LEASE_FOR_CLAIM*/ 
	156, /*CA_REQUEST_CLAIM*/ 
	161, /*CA_RESUME_CLAIM*/ 
	160, /*CA_SUSPEND_CLAIM*/ 
	229, /*CACHED_ADVERTISE_TO_ORIGIN*/ 
	224, /*CACHED_CHECK_CONSISTENCY*/ 
	217, /*CACHED_CREATE_CACHE_DIR*/ 
	227, /*CACHED_CREATE_REPLICA*/ 
	233, /*CACHED_DECODE_FILE*/ 
	234, /*CACHED_DISTRIBUTE_ENCODED_FILES*/ 
	219, /*CACHED_DOWNLOAD_FILES*/ 
	231, /*CACHED_ENCODE_DIR*/ 
	232, /*CACHED_ENCODE_FILE*/ 
	226, /*CACHED_GET_REPLICATION_POLICY*/ 
	222, /*CACHED_LIST_CACHE_DIRS*/ 
	223, /*CACHED_LIST_FILES_BY_PATH*/ 
	220, /*CACHED_REMOVE_CACHE_DIR*/ 
	228, /*CACHED_REPLICA_DOWNLOAD_FILES*/ 
	230, /*CACHED_REQUEST_LOCAL_REPLICATION*/ 
	225, /*CACHED_SET_REPLICATION_POLICY*/ 
	221, /*CACHED_UPDATE_LEASE*/ 
	218, /*CACHED_UPLOAD_FILES*/ 
	149, /*CANCEL_DRAIN_JOBS*/ 
	54, /*CCB_REGISTER*/ 
	55, /*CCB_REQUEST*/ 
	56, /*CCB_REVERSE_CONNECT*/ 
//	80, /*CHECK_CAPABILITY*/ /* Not used */
	127, /*CHILD_OFF*/ // Turn my child OFF (HAD)
	128, /*CHILD_OFF_FAST*/ // Turn my child OFF/Fast (HAD)
	126, /*CHILD_ON*/ // Turn my child ON (HAD)
	147, /*CLEAR_DIRTY_JOB_ATTRS*/ // schedd: clear dirty attributes for a job
	94, /*CONFIG_VAL*/ 
	64, /*CONTINUE_CLAIM*/ // New name for CONTINUE_FRGN_JOB
	169, /*CREATE_JOB_OWNER_SEC_SESSION*/ 
	236, /*CREDD_GET_CRED*/ 
	239, /*CREDD_GET_PASSWD*/ // used by the Win32 credd only
	240, /*CREDD_NOP*/ // used by the Win32 credd only
	238, /*CREDD_QUERY_CRED*/ 
	237, /*CREDD_REMOVE_CRED*/ 
	235, /*CREDD_STORE_CRED*/ 
	104, /*DAEMON_OFF*/ // specific daemon, subsys follows 
	105, /*DAEMON_OFF_FAST*/ // specific daemon, subsys follows 
	119, /*DAEMON_OFF_PEACEFUL*/ // specific daemon, subsys follows
	106, /*DAEMON_ON*/ // specific daemon, subsys follows 
	91, /*DAEMONS_OFF*/ 
	98, /*DAEMONS_OFF_FAST*/ 
	120, /*DAEMONS_OFF_PEACEFUL*/ 
	92, /*DAEMONS_ON*/ 
	181, /*DC_AUTHENTICATE*/ 
	179, /*DC_CHILDALIVE*/ 
	173, /*DC_CONFIG_PERSIST*/ 
	174, /*DC_CONFIG_RUNTIME*/ 
	178, /*DC_CONFIG_VAL*/ 
	184, /*DC_FETCH_LOG*/ 
	185, /*DC_INVALIDATE_KEY*/ 
	182, /*DC_NOP*/ 
	193, /*DC_NOP_ADMINISTRATOR*/ 
	199, /*DC_NOP_ADVERTISE_MASTER*/ 
	198, /*DC_NOP_ADVERTISE_SCHEDD*/ 
	197, /*DC_NOP_ADVERTISE_STARTD*/ 
	195, /*DC_NOP_CONFIG*/ 
	196, /*DC_NOP_DAEMON*/ 
	192, /*DC_NOP_NEGOTIATOR*/ 
	194, /*DC_NOP_OWNER*/ 
	190, /*DC_NOP_READ*/ 
	191, /*DC_NOP_WRITE*/ 
	177, /*DC_OFF_FAST*/ 
	202, /*DC_OFF_FORCE*/ 
	176, /*DC_OFF_GRACEFUL*/ 
	186, /*DC_OFF_PEACEFUL*/ 
	189, /*DC_PURGE_LOG*/ 
	172, /*DC_RAISESIGNAL*/ 
	175, /*DC_RECONFIG*/ 
	183, /*DC_RECONFIG_FULL*/ 
	200, /*DC_SEC_QUERY*/ 
	180, /*DC_SERVICEWAITPIDS*/ 
	201, /*DC_SET_FORCE_SHUTDOWN*/ 
	187, /*DC_SET_PEACEFUL_SHUTDOWN*/ 
//	190, /*DC_SHARE_SOCK*/ /* Not used */
	188, /*DC_TIME_OFFSET*/ 
	66, /*DEACTIVATE_CLAIM*/ // New name for CKPT_FRGN_JOB
	67, /*DEACTIVATE_CLAIM_FORCIBLY*/ // New name for KILL_FRGN_JOB
	135, /*DELEGATE_GSI_CRED_SCHEDD*/ // delegate refreshed gsi proxy to schedd
	137, /*DELEGATE_GSI_CRED_STARTD*/ // delegate gsi proxy to startd
	136, /*DELEGATE_GSI_CRED_STARTER*/ // delegate refreshed gsi proxy to starter
	118, /*DELETE_USER*/ // negotiator  (actually, accountant)
//	78, /*DO_NOT_UNLINK_HISTORY_FILE*/ /* Not used */
	148, /*DRAIN_JOBS*/ 
	108, /*DUMP_STATE*/ // drop internal vars into classad
	75, /*END_NEGOTIATE*/ // used in negotiation protocol
	204, /*FILETRANS_DOWNLOAD*/ 
	203, /*FILETRANS_UPLOAD*/ 
//	78, /*GET_HISTORY*/ /* Not used */
	145, /*GET_JOB_CONNECT_INFO*/ // schedd: get connection information for starter running a job
	117, /*GET_MYPROXY_PASSWORD*/ // gmanager->schedd: Give me MyProxy password
	89, /*GET_PRIORITY*/ // negotiator
	150, /*GET_PRIORITY_ROLLUP*/ // negotiator
	100, /*GET_RESLIST*/ // negotiator
//	89, /*GIVE_CLASSAD*/ /* Not used */
	207, /*GIVE_MATCHES*/ // for MPI & parallel shadow
//	80, /*GIVE_PRIORITY*/ /* Not used */
//	90, /*GIVE_REQUEST_AD*/ // Starter -> Startd, Not used
	87, /*GIVE_STATE*/ 
//	74, /*GIVE_STATUS*/ /* Not used */
//	75, /*GIVE_STATUS_LINES*/ /* Not used */
	107, /*GIVE_TOTALS_CLASSAD*/ 
	209, /*GRIDMAN_CHECK_LEASES*/ 
	46, /*INVALIDATE_ADS_GENERIC*/ 
	14, /*INVALIDATE_CKPT_SRVR_ADS*/ 
	18, /*INVALIDATE_COLLECTOR_ADS*/ 
//	14, /*INVALIDATE_GATEWAY_ADS*/ /* Not used */
	59, /*INVALIDATE_GRID_ADS*/ 
	44, /*INVALIDATE_HAD_ADS*/ 
	53, /*INVALIDATE_LEASE_MANAGER_ADS*/ 
	31, /*INVALIDATE_LICENSE_ADS*/ 
	13, /*INVALIDATE_MASTER_ADS*/ 
	38, /*INVALIDATE_NEGOTIATOR_ADS*/ 
	41, /*INVALIDATE_QUILL_ADS*/ 
	12, /*INVALIDATE_SCHEDD_ADS*/ 
	11, /*INVALIDATE_STARTD_ADS*/ 
	34, /*INVALIDATE_STORAGE_ADS*/ 
	15, /*INVALIDATE_SUBMITTOR_ADS*/ 
	50, /*INVALIDATE_XFER_SERVICE_ADS*/ 
	73, /*JOB_INFO*/ // used in negotiation protocol
	214, /*LEASE_MANAGER_GET_LEASES*/ 
	216, /*LEASE_MANAGER_RELEASE_LEASE*/ 
	215, /*LEASE_MANAGER_RENEW_LEASE*/ 
//	69, /*LOCAL_STATISTICS*/ /* Not used */
	68, /*LOCAL_STATUS*/ /* Not used */
	93, /*MASTER_OFF*/ 
	99, /*MASTER_OFF_FAST*/ 
	80, /*MATCH_INFO*/ 
	60, /*MERGE_STARTD_AD*/ 
	206, /*MPI_START_COMRADE*/ // for MPI & parallel shadow
	70, /*NEGOTIATE*/ // 7.5.4+ negotiation command
	129, /*NEGOTIATE_WITH_SIGATTRS*/ // pre 7.5.4 NEGOTIATE
//	75, /*NEGOTIATOR_INFO*/ /* Not used */
	72, /*NO_MORE_JOBS*/ // used in negotiation protocol
//	70, /*NUM_FRGN_JOBS*/ /* Not used */
	85, /*PCKPT_ALL_JOBS*/ 
	79, /*PCKPT_FRGN_JOB*/ 
	103, /*PCKPT_JOB*/ // periodic ckpt a given slot
	69, /*PERMISSION*/ // used in negotiation protocol
	109, /*PERMISSION_AND_AD*/ // negotiator is sending startad to schedd
//	75, /*PING*/ /* Not used */
//	70, /*PREEMPT_LOCAL_JOBS*/ /* Not used */
//	85, /*PRIORITY_INFO*/ /* negotiator to accountant, Not used */
//	205, /*PW_CLEARPASS*/ /* Not used */
//	205, /*PW_GETPASS*/ /* Not used */
//	205, /*PW_SETPASS*/ /* Not used */
	163, /*QMGMT_READ_CMD*/ 
	164, /*QMGMT_WRITE_CMD*/ 
	35, /*QUERY_ANY_ADS*/ 
	7, /*QUERY_CKPT_SRVR_ADS*/ 
	17, /*QUERY_COLLECTOR_ADS*/ 
//	7, /*QUERY_GATEWAY_ADS*/ /* Not used */
	61, /*QUERY_GENERIC_ADS*/ 
	58, /*QUERY_GRID_ADS*/ 
	43, /*QUERY_HAD_ADS*/ 
	27, /*QUERY_HIST_CKPTSRVR*/ 
	28, /*QUERY_HIST_CKPTSRVR_LIST*/ 
	23, /*QUERY_HIST_GROUPS*/ 
	24, /*QUERY_HIST_GROUPS_LIST*/ 
	19, /*QUERY_HIST_STARTD*/ 
	20, /*QUERY_HIST_STARTD_LIST*/ 
	21, /*QUERY_HIST_SUBMITTOR*/ 
	22, /*QUERY_HIST_SUBMITTOR_LIST*/ 
	25, /*QUERY_HIST_SUBMITTORGROUPS*/ 
	26, /*QUERY_HIST_SUBMITTORGROUPS_LIST*/ 
	152, /*QUERY_JOB_ADS*/ 
	52, /*QUERY_LEASE_MANAGER_ADS*/ 
	30, /*QUERY_LICENSE_ADS*/ 
	6, /*QUERY_MASTER_ADS*/ 
	37, /*QUERY_NEGOTIATOR_ADS*/ 
	40, /*QUERY_QUILL_ADS*/ 
	5, /*QUERY_SCHEDD_ADS*/ 
	151, /*QUERY_SCHEDD_HISTORY*/ 
	4, /*QUERY_STARTD_ADS*/ 
	8, /*QUERY_STARTD_PVT_ADS*/ 
	33, /*QUERY_STORAGE_ADS*/ 
	10, /*QUERY_SUBMITTOR_ADS*/ 
	49, /*QUERY_XFER_SERVICE_ADS*/ 
//	208, /*RECEIVE_JOBAD*/ /* Not used */
//	78, /*RECONFIG*/ /* Not used */
	146, /*RECYCLE_SHADOW*/ // schedd: get a new job for a shadow
	76, /*REJECTED*/ 
	112, /*REJECTED_WITH_REASON*/ // diagnostic version of REJECTED
	83, /*RELEASE_CLAIM*/ 
	78, /*REQ_NEW_PROC*/ 
	82, /*REQUEST_CLAIM*/ 
//	110, /*REQUEST_NETWORK*/ // negotiator network mgmt, Not used
	138, /*REQUEST_SANDBOX_LOCATION*/ // get the sinful of a transferd
	74, /*RESCHEDULE*/ 
	97, /*RESET_ALL_USAGE*/ // negotiator
	95, /*RESET_USAGE*/ // negotiator
	90, /*RESTART*/ 
	121, /*RESTART_PEACEFUL*/ 
//	70, /*RM_LOCAL_JOB*/ /* Not used */
//	70, /*SCHEDD_INFO*/ /* Not used */
//	78, /*SEND_ALL_JOBS*/ /* Not used */
//	78, /*SEND_ALL_JOBS_PRIO*/ /* Not used */
	71, /*SEND_JOB_INFO*/ // used in negotiation protocol
	154, /*SEND_RESOURCE_REQUEST_LIST*/ // used in negotiation protocol
//	80, /*SEND_RUNNING_JOBS*/ /* Not used */
	130, /*SET_ACCUMUSAGE*/ // negotiator
	131, /*SET_BEGINTIME*/ // negotiator
//	70, /*SET_DEBUG_FLAGS*/ /* Not used */
	132, /*SET_LASTTIME*/ // negotiator
	88, /*SET_PRIORITY*/ // negotiator(priviliged) cmd 
	96, /*SET_PRIORITYFACTOR*/ // negotiator
	144, /*SET_SHUTDOWN_PROGRAM*/ // Master: Run program at shutdown
	205, /*SHADOW_UPDATEINFO*/ 
	62, /*SHARED_PORT_CONNECT*/ 
	63, /*SHARED_PORT_PASS_SOCK*/ 
	116, /*SPOOL_JOB_FILES*/ // spool all job files via filetransfer object
	124, /*SPOOL_JOB_FILES_WITH_PERMS*/ // spool all job files via filetransfer object (new version with file permissions)
	113, /*START_AGENT*/ // have the master start an agent
//	70, /*START_FRGN_JOB*/ /* Not used */
	170, /*START_SSHD*/ 
//	70, /*STARTD_INFO*/ /* Not used */
	168, /*STARTER_HOLD_JOB*/ 
	171, /*STARTER_PEEK*/ 
	115, /*STORE_CRED*/ // schedd, store a credential
	133, /*STORE_POOL_CRED*/ // master, store password for daemon-to-daemon shared secret auth (PASSWORD)
	65, /*SUSPEND_CLAIM*/ // New name for SUSPEND_FRGN_JOB
	153, /*SWAP_CLAIM_AND_ACTIVATION*/ // swap claim & activation between two STARTD resources, for moving a job into a 'transfer' slot.
//	206, /*TAKE_MATCH*/ // for MPI & parallel shadow, Not used
	122, /*TRANSFER_DATA*/ // send all job files back via filetransfer object
	125, /*TRANSFER_DATA_WITH_PERMS*/ // send all job files back via filetransfer object (new version with file permissions)
	143, /*TRANSFER_QUEUE_REQUEST*/ // request to do file transfer
	211, /*TRANSFERD_CONTROL_CHANNEL*/ 
	213, /*TRANSFERD_READ_FILES*/ 
	210, /*TRANSFERD_REGISTER*/ 
	212, /*TRANSFERD_WRITE_FILES*/ 
//	78, /*UNLINK_HISTORY_FILE*/ /* Not used */
//	78, /*UNLINK_HISTORY_FILE_DONE*/ /* Not used */
	45, /*UPDATE_AD_GENERIC*/ 
	3, /*UPDATE_CKPT_SRVR_AD*/ 
	16, /*UPDATE_COLLECTOR_AD*/ 
//	3, /*UPDATE_GATEWAY_AD*/ /* Not used */
	57, /*UPDATE_GRID_AD*/ 
	123, /*UPDATE_GSI_CRED*/ // send refreshed gsi proxy file
	42, /*UPDATE_HAD_AD*/ 
	208, /*UPDATE_JOBAD*/ 
	51, /*UPDATE_LEASE_MANAGER_AD*/ 
	29, /*UPDATE_LICENSE_AD*/ 
	2, /*UPDATE_MASTER_AD*/ 
	36, /*UPDATE_NEGOTIATOR_AD*/ 
	39, /*UPDATE_QUILL_AD*/ 
	1, /*UPDATE_SCHEDD_AD*/ 
	0, /*UPDATE_STARTD_AD*/ 
	47, /*UPDATE_STARTD_AD_WITH_ACK*/ 
	32, /*UPDATE_STORAGE_AD*/ 
	9, /*UPDATE_SUBMITTOR_AD*/ 
	48, /*UPDATE_XFER_SERVICE_AD*/ 
	86, /*VACATE_ALL_CLAIMS*/ 
	110, /*VACATE_ALL_FAST*/ // fast vacate for whole machine
	102, /*VACATE_CLAIM*/ // vacate a given claim
	111, /*VACATE_CLAIM_FAST*/ // fast vacate for a given slot
	134, /*VM_REGISTER*/ // Virtual Machine (*not* "slot") ;)
	139, /*VM_UNIV_GAHP_ERROR*/ // report the error of vmgahp to startd
	141, /*VM_UNIV_GUEST_IP*/ // IP address of VM
	142, /*VM_UNIV_GUEST_MAC*/ // MAC address of VM
	140, /*VM_UNIV_VMPID*/ // PID of process for a VM
	77, /*X_EVENT_NOTIFICATION*/ 
};
